{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/yersultan/developer/work_projects/gp-consulting-2/src/app/scroll-test/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\n\nexport default function ScrollTestPage() {\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [windowHeight, setWindowHeight] = useState(0);\n  const [documentHeight, setDocumentHeight] = useState(0);\n  const [touchInfo, setTouchInfo] = useState({ active: false, y: 0 });\n\n  useEffect(() => {\n    const updateScrollInfo = () => {\n      setScrollPosition(window.scrollY);\n      setWindowHeight(window.innerHeight);\n      setDocumentHeight(document.documentElement.scrollHeight);\n    };\n\n    // Basic scroll and resize events\n    window.addEventListener('scroll', updateScrollInfo);\n    window.addEventListener('resize', updateScrollInfo);\n    updateScrollInfo();\n\n    // Touch events for the entire document\n    const handleTouchStart = (e: TouchEvent) => {\n      setTouchInfo({\n        active: true,\n        y: e.touches[0].clientY\n      });\n    };\n\n    const handleTouchEnd = () => {\n      setTouchInfo({ active: false, y: 0 });\n    };\n\n    const handleTouchMove = (e: TouchEvent) => {\n      setTouchInfo(prev => ({\n        active: true,\n        y: e.touches[0].clientY\n      }));\n    };\n\n    document.addEventListener('touchstart', handleTouchStart, { passive: true });\n    document.addEventListener('touchend', handleTouchEnd, { passive: true });\n    document.addEventListener('touchmove', handleTouchMove, { passive: true });\n\n    return () => {\n      window.removeEventListener('scroll', updateScrollInfo);\n      window.removeEventListener('resize', updateScrollInfo);\n      document.removeEventListener('touchstart', handleTouchStart);\n      document.removeEventListener('touchend', handleTouchEnd);\n      document.removeEventListener('touchmove', handleTouchMove);\n    };\n  }, []);\n\n  return (\n    <div className=\"min-h-screen p-4 touch-pan-y\">\n      {/* Scroll info display */}\n      <div className=\"fixed top-0 left-0 right-0 bg-black/80 text-white p-4 z-50 text-sm\">\n        <p>Scroll Position: {scrollPosition}px</p>\n        <p>Window Height: {windowHeight}px</p>\n        <p>Document Height: {documentHeight}px</p>\n        <p>Touch Active: {touchInfo.active ? 'Yes' : 'No'}</p>\n        <p>Touch Y: {touchInfo.y}</p>\n      </div>\n\n      <div className=\"mt-20\">\n        <h1 className=\"text-4xl font-bold mb-4\">Touch Scroll Test Page</h1>\n        <p className=\"text-lg mb-8 text-gray-600\">\n          On mobile: Use your finger to scroll smoothly through the sections below.\n          The colored sections should follow your finger movement naturally.\n        </p>\n        \n        {/* Test content */}\n        {Array.from({ length: 20 }).map((_, index) => (\n          <div\n            key={index}\n            className=\"my-8 p-6 rounded-lg border touch-pan-y\"\n            style={{\n              backgroundColor: `hsl(${index * 20}, 70%, 80%)`,\n            }}\n          >\n            <h2 className=\"text-2xl font-semibold mb-4\">Section {index + 1}</h2>\n            <p className=\"mb-4\">\n              This is a test section to verify scrolling behavior. Each section has a different\n              color to make it easy to track scrolling progress.\n            </p>\n            <div className=\"text-4xl font-bold\">\n              {Math.round((index / 19) * 100)}% scrolled\n            </div>\n          </div>\n        ))}\n\n        <div className=\"h-screen bg-green-100 flex items-center justify-center\">\n          <h2 className=\"text-3xl font-bold text-center\">\n            You reached the bottom! ðŸŽ‰\n            <br />\n            <span className=\"text-lg block mt-4\">\n              Pull down to scroll back up\n            </span>\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,QAAQ;QAAO,GAAG;IAAE;IAEjE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,mBAAmB;YACvB,kBAAkB,OAAO,OAAO;YAChC,gBAAgB,OAAO,WAAW;YAClC,kBAAkB,SAAS,eAAe,CAAC,YAAY;QACzD;QAEA,iCAAiC;QACjC,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,gBAAgB,CAAC,UAAU;QAClC;QAEA,uCAAuC;QACvC,MAAM,mBAAmB,CAAC;YACxB,aAAa;gBACX,QAAQ;gBACR,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO;YACzB;QACF;QAEA,MAAM,iBAAiB;YACrB,aAAa;gBAAE,QAAQ;gBAAO,GAAG;YAAE;QACrC;QAEA,MAAM,kBAAkB,CAAC;YACvB,aAAa,CAAA,OAAQ,CAAC;oBACpB,QAAQ;oBACR,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO;gBACzB,CAAC;QACH;QAEA,SAAS,gBAAgB,CAAC,cAAc,kBAAkB;YAAE,SAAS;QAAK;QAC1E,SAAS,gBAAgB,CAAC,YAAY,gBAAgB;YAAE,SAAS;QAAK;QACtE,SAAS,gBAAgB,CAAC,aAAa,iBAAiB;YAAE,SAAS;QAAK;QAExE,OAAO;YACL,OAAO,mBAAmB,CAAC,UAAU;YACrC,OAAO,mBAAmB,CAAC,UAAU;YACrC,SAAS,mBAAmB,CAAC,cAAc;YAC3C,SAAS,mBAAmB,CAAC,YAAY;YACzC,SAAS,mBAAmB,CAAC,aAAa;QAC5C;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;4BAAE;4BAAkB;4BAAe;;;;;;;kCACpC,8OAAC;;4BAAE;4BAAgB;4BAAa;;;;;;;kCAChC,8OAAC;;4BAAE;4BAAkB;4BAAe;;;;;;;kCACpC,8OAAC;;4BAAE;4BAAe,UAAU,MAAM,GAAG,QAAQ;;;;;;;kCAC7C,8OAAC;;4BAAE;4BAAU,UAAU,CAAC;;;;;;;;;;;;;0BAG1B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;oBAMzC,MAAM,IAAI,CAAC;wBAAE,QAAQ;oBAAG,GAAG,GAAG,CAAC,CAAC,GAAG,sBAClC,8OAAC;4BAEC,WAAU;4BACV,OAAO;gCACL,iBAAiB,CAAC,IAAI,EAAE,QAAQ,GAAG,WAAW,CAAC;4BACjD;;8CAEA,8OAAC;oCAAG,WAAU;;wCAA8B;wCAAS,QAAQ;;;;;;;8CAC7D,8OAAC;oCAAE,WAAU;8CAAO;;;;;;8CAIpB,8OAAC;oCAAI,WAAU;;wCACZ,KAAK,KAAK,CAAC,AAAC,QAAQ,KAAM;wCAAK;;;;;;;;2BAZ7B;;;;;kCAiBT,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;;gCAAiC;8CAE7C,8OAAC;;;;;8CACD,8OAAC;oCAAK,WAAU;8CAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjD","debugId":null}}]
}